(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     61669,       1550]
NotebookOptionsPosition[     54962,       1374]
NotebookOutlinePosition[     55339,       1391]
CellTagsIndexPosition[     55296,       1388]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Wolfram Summer School Project - Exon Prediction", "Title",
 CellChangeTimes->{{3.707725196119258*^9, 3.707725209173921*^9}, {
  3.7082645611908417`*^9, 
  3.70826456330029*^9}},ExpressionUUID->"cec6b53b-f55e-49c5-9f7e-\
647850a94cda"],

Cell[CellGroupData[{

Cell["Setup", "Chapter",
 CellChangeTimes->{{3.707744424964769*^9, 
  3.707744425548071*^9}},ExpressionUUID->"285b8e74-1ded-4b78-946c-\
0cb2940fdcca"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "For", " ", "convenience", " ", "set", " ", "directory", " ", "to", " ", 
    "the", " ", "subdirectory", " ", "which", " ", "houses", " ", "the", " ", 
    "data"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"dir", "=", 
     RowBox[{"FileNameJoin", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"NotebookDirectory", "[", "]"}], ",", 
        "\"\<processed_data\>\""}], "}"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"SetDirectory", "[", "dir", "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Ensure", " ", "Bedtools", " ", "is", " ", "a", " ", "part", " ", "of", 
     " ", "the", " ", "path"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"SetEnvironment", "[", 
    RowBox[{"\"\<PATH\>\"", "\[Rule]", 
     RowBox[{"Import", "[", 
      RowBox[{
      "\"\<!source ~/.bash_profile; echo $PATH\>\"", ",", "\"\<Text\>\""}], 
      "]"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.707725285814947*^9, 3.7077252875873833`*^9}, {
  3.707739690755918*^9, 3.707739690966386*^9}, {3.707744436046731*^9, 
  3.707744444462377*^9}, {3.707865207109621*^9, 
  3.707865225425865*^9}},ExpressionUUID->"54e2d0d0-1ee6-4a3d-9f31-\
87347bc087bc"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Function Definitions", "Chapter",
 CellChangeTimes->{{3.70772557918289*^9, 
  3.707725584286563*^9}},ExpressionUUID->"5e2c105c-3b63-450b-ad20-\
9b9d20cacc88"],

Cell[CellGroupData[{

Cell["File Processing", "Subchapter",
 CellChangeTimes->{{3.7077255861676073`*^9, 
  3.7077255899449587`*^9}},ExpressionUUID->"2a9ac0d6-9a31-489c-b7ab-\
40e6e6534c28"],

Cell[CellGroupData[{

Cell["FileLines", "Section",
 CellChangeTimes->{{3.7078653419780903`*^9, 
  3.707865343418888*^9}},ExpressionUUID->"5434fd4e-917e-45fe-8627-\
f1950a4926c0"],

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "FileLines", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"FileLines", "::", "usage"}], "=", 
   "\"\<FileLines returns the number of lines in the given file.\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"FileLines", "::", "dne"}], "=", 
   "\"\<File '`1`' does not exist.\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"FileLines", "[", "file_String", "]"}], "/;", 
   RowBox[{"!", " ", 
    RowBox[{"FileExistsQ", "[", "file", "]"}]}]}], ":=", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"Message", "[", 
     RowBox[{
      RowBox[{"FileLines", "::", "dne"}], ",", "file"}], "]"}], ";", 
    "$Failed"}], ")"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"FileLines", "[", "file_String", "]"}], ":=", 
  RowBox[{"Length", "@", 
   RowBox[{"ReadList", "[", 
    RowBox[{"file", ",", 
     RowBox[{"Null", "@", "String"}], ",", 
     RowBox[{"NullRecords", "\[Rule]", "True"}]}], "]"}]}]}]}], "Input",
 CellChangeTimes->{{3.707725697209064*^9, 3.707725746979143*^9}, {
   3.707865233110181*^9, 3.707865236378537*^9}, 
   3.70786530277666*^9},ExpressionUUID->"7a9a7289-69c7-4015-8e53-\
040b9d5c4b48"]
}, Open  ]],

Cell[CellGroupData[{

Cell["FastaTabToDataset", "Section",
 CellChangeTimes->{{3.707865347171619*^9, 
  3.7078653512099*^9}},ExpressionUUID->"fc934d39-e6da-418b-8f24-42db5b27164e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"FastaTabToDataset", "::", "usage"}], "=", 
   "\"\<Converts the output of a 'fastaFromBed <args> -tab' command to a \
Mathematica Dataset.\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"FastaTabToDataset", "[", "fastaFile_", "]"}], ":=", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"fileLines", "=", 
       RowBox[{"FileLines", "[", "fastaFile", "]"}]}], ",", 
      "\[IndentingNewLine]", "outputStream", ",", "line", ",", "lineIndex", 
      ",", "inputStream", ",", "output", ",", "annotation"}], "}"}], ",", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{
     "Close", " ", "files", " ", "if", " ", "they", " ", "were", " ", 
      "otherwise", " ", "open"}], " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Quiet", "[", 
      RowBox[{"Close", "[", "fastaFile", "]"}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Quiet", "[", 
      RowBox[{"Close", "[", 
       RowBox[{
        RowBox[{"FileBaseName", "[", "fastaFile", "]"}], "<>", "\"\<.m\>\""}],
        "]"}], "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"If", " ", "fileLine", " ", "fails"}], ",", " ", 
       RowBox[{"file", " ", "does", " ", "not", " ", 
        RowBox[{"exist", ".", " ", "Fail"}], " ", "this", " ", 
        "evaluation"}]}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"fileLines", "\[Equal]", "$Failed"}], ",", "$Failed"}], "]"}], 
     ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"Open", " ", "the", " ", "output", " ", "stream"}], " ", "*)"}],
      "\[IndentingNewLine]", 
     RowBox[{"outputStream", "=", 
      RowBox[{"OpenWrite", "[", 
       RowBox[{
        RowBox[{"FileBaseName", "[", "fastaFile", "]"}], "<>", "\"\<.m\>\""}],
        "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"Start", " ", "a", " ", "list"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"WriteString", "[", 
      RowBox[{"outputStream", ",", "\"\<Dataset[{\>\""}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"Open", " ", "the", " ", "input", " ", "stream"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"inputStream", "=", 
      RowBox[{"OpenRead", "[", "fastaFile", "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"Display", " ", "a", " ", "handly", " ", "ProgressIndicator"}], 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"Monitor", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"lineIndex", "=", "1"}], ";", "\[IndentingNewLine]", 
        RowBox[{"While", "[", 
         RowBox[{
          RowBox[{"lineIndex", "\[LessEqual]", "fileLines"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"line", "=", 
            RowBox[{"ReadLine", "[", "inputStream", "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"line", "===", "EndOfFile"}], ",", 
             RowBox[{"Break", "[", "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
           RowBox[{"line", "=", " ", 
            RowBox[{"StringSplit", "[", 
             RowBox[{"line", ",", "\"\<\\t\>\""}], "]"}]}], ";", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"annotation", "=", "\"\<Sequence\>\""}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"StringContainsQ", "[", 
              RowBox[{
               RowBox[{"line", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", "\"\<exon\>\""}], "]"}], 
             ",", 
             RowBox[{"annotation", "=", "\"\<Exon\>\""}]}], "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"StringContainsQ", "[", 
              RowBox[{
               RowBox[{"line", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", "\"\<intron\>\""}], 
              "]"}], ",", 
             RowBox[{"annotation", "=", "\"\<Intron\>\""}]}], "]"}], ";", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"output", "=", 
            RowBox[{"<|", 
             RowBox[{
              RowBox[{
               RowBox[{"wrapInQuotes", "@", "\"\<Name\>\""}], "\[Rule]", 
               RowBox[{"wrapInQuotes", "@", 
                RowBox[{"line", "[", 
                 RowBox[{"[", "1", "]"}], "]"}]}]}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"wrapInQuotes", "@", "\"\<Sequence\>\""}], "->", 
               RowBox[{"wrapInQuotes", "@", 
                RowBox[{"ToUpperCase", "@", 
                 RowBox[{"line", "[", 
                  RowBox[{"[", "2", "]"}], "]"}]}]}]}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"wrapInQuotes", "@", "\"\<Class\>\""}], "\[Rule]", 
               RowBox[{"wrapInQuotes", "@", "annotation"}]}]}], "|>"}]}], ";",
            "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{"WriteString", "[", 
              RowBox[{"outputStream", ",", 
               RowBox[{"ToString", "[", 
                RowBox[{"wrapInQuotes", "/@", "line"}], "]"}]}], "]"}], ";"}],
             "*)"}], "\[IndentingNewLine]", 
           RowBox[{"WriteString", "[", 
            RowBox[{"outputStream", ",", 
             RowBox[{"ToString", "@", "output"}]}], "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"lineIndex", "<", "fileLines"}], ",", 
             RowBox[{
              RowBox[{"WriteString", "[", 
               RowBox[{"outputStream", ",", "\"\<,\>\""}], "]"}], ";"}]}], 
            "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"lineIndex", "+=", "1"}], ";"}]}], "\[IndentingNewLine]", 
         "]"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", ",", 
       RowBox[{"ProgressIndicator", "[", 
        RowBox[{"lineIndex", ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "fileLines"}], "}"}]}], "]"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"End", " ", "the", " ", "list"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"WriteString", "[", 
      RowBox[{"outputStream", ",", "\"\<}]\>\""}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"Close", " ", "Streams"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"Close", "[", "inputStream", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Close", "[", "outputStream", "]"}], ";"}]}], 
   "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->{{3.7077398541533403`*^9, 3.707739878878447*^9}, {
  3.707739970290758*^9, 3.707740259185907*^9}, {3.707740292237158*^9, 
  3.7077402930417356`*^9}, {3.707740329807783*^9, 3.707740331663662*^9}, {
  3.707865240776334*^9, 
  3.707865320920752*^9}},ExpressionUUID->"82ab7833-b493-49c0-b2e8-\
a8f3d41e9805"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Preprocessing", "Subchapter",
 CellChangeTimes->{{3.707725999588244*^9, 
  3.707726009619334*^9}},ExpressionUUID->"4175cc22-7c24-4901-b45c-\
3cc486d38b31"],

Cell[CellGroupData[{

Cell["Convert coding_regions.bed to Mathematica Object", "Section",
 CellChangeTimes->{{3.707726016403956*^9, 
  3.707726037301243*^9}},ExpressionUUID->"fd7db4b7-9e13-46bb-bb25-\
e1944e6c1c6c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "give", " ", "a", " ", "readble", " ", "name", " ", "to", " ", "what", " ",
     "could", " ", "be", " ", "an", " ", "anonymous", " ", "function", " ", 
    "for", " ", "ensuring", " ", "strings", " ", "are", " ", "output", " ", 
    "correctly"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"wrapInQuotes", "[", "item_", "]"}], ":=", 
     RowBox[{"\"\<\\\"\>\"", "<>", "item", "<>", "\"\<\\\"\>\""}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Convert", " ", "a", " ", "BED", " ", "file", " ", "to", " ", "a", " ", 
     "Mathematica", " ", "association"}], " ", "*)"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{
     RowBox[{"convertBED", "::", "usage"}], "=", 
     "\"\<Converts the given file to a an association and outputs it to a \
file with the same name with the extension '.m'.\>\""}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"convertBED", "[", "bedFile_", "]"}], ":=", 
    RowBox[{"Module", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"fileLines", "=", 
         RowBox[{"FileLines", "[", "bedFile", "]"}]}], ",", 
        "\[IndentingNewLine]", "outputStream", ",", "line", ",", "lineIndex", 
        ",", "inputStream", ",", "bed"}], "}"}], ",", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "Close", " ", "files", " ", "in", " ", "case", " ", "they", " ", "are",
         " ", "somehow", " ", "already", " ", "open"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Quiet", "[", 
        RowBox[{"Close", "[", "bedFile", "]"}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Quiet", "[", 
        RowBox[{"Close", "[", 
         RowBox[{
          RowBox[{"FileBaseName", "[", "bedFile", "]"}], "<>", "\"\<.m\>\""}],
          "]"}], "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{"If", " ", "fileLine", " ", "fails"}], ",", " ", 
         RowBox[{"file", " ", "does", " ", "not", " ", 
          RowBox[{"exist", ".", " ", "Fail"}], " ", "this", " ", 
          "evaluation"}]}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"fileLines", "\[Equal]", "$Failed"}], ",", "$Failed"}], 
        "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"Open", " ", "the", " ", "output", " ", "stream"}], " ", 
        "*)"}], "\[IndentingNewLine]", 
       RowBox[{"outputStream", "=", 
        RowBox[{"OpenWrite", "[", 
         RowBox[{
          RowBox[{"FileBaseName", "[", "bedFile", "]"}], "<>", "\"\<.m\>\""}],
          "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"Start", " ", "a", " ", "list"}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"WriteString", "[", 
        RowBox[{"outputStream", ",", "\"\<Dataset[{\>\""}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"Open", " ", "the", " ", "input", " ", "stream"}], " ", 
        "*)"}], "\[IndentingNewLine]", 
       RowBox[{"inputStream", "=", 
        RowBox[{"OpenRead", "[", "bedFile", "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "Give", " ", "the", " ", "user", " ", "a", " ", "way", " ", "to", " ",
          "monitor", " ", "the", " ", "progress"}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"Monitor", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"lineIndex", "=", "1"}], ";", "\[IndentingNewLine]", 
          RowBox[{"While", "[", 
           RowBox[{
            RowBox[{"lineIndex", "\[LessEqual]", "fileLines"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"line", "=", 
              RowBox[{"ReadLine", "[", "inputStream", "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"line", "===", "EndOfFile"}], ",", 
               RowBox[{"Break", "[", "]"}]}], "]"}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"line", "=", " ", 
              RowBox[{"StringSplit", "[", 
               RowBox[{"line", ",", "\"\<\\t\>\""}], "]"}]}], ";", 
             "\[IndentingNewLine]", "\[IndentingNewLine]", 
             RowBox[{"bed", "=", 
              RowBox[{"<|", 
               RowBox[{
                RowBox[{
                 RowBox[{"wrapInQuotes", "@", "\"\<Chromosome\>\""}], 
                 "\[Rule]", 
                 RowBox[{"wrapInQuotes", "@", 
                  RowBox[{"line", "[", 
                   RowBox[{"[", "1", "]"}], "]"}]}]}], ",", 
                RowBox[{
                 RowBox[{"wrapInQuotes", "@", "\"\<Start\>\""}], "\[Rule]", 
                 " ", 
                 RowBox[{"line", "[", 
                  RowBox[{"[", "2", "]"}], "]"}]}], ",", 
                RowBox[{
                 RowBox[{"wrapInQuotes", "@", "\"\<Stop\>\""}], "\[Rule]", 
                 RowBox[{"line", "[", 
                  RowBox[{"[", "3", "]"}], "]"}]}], ",", 
                RowBox[{
                 RowBox[{"wrapInQuotes", "@", "\"\<Name\>\""}], "\[Rule]", 
                 RowBox[{"wrapInQuotes", "@", 
                  RowBox[{"line", "[", 
                   RowBox[{"[", "4", "]"}], "]"}]}]}], ",", 
                RowBox[{
                 RowBox[{"wrapInQuotes", "@", "\"\<Score\>\""}], "\[Rule]", 
                 RowBox[{"wrapInQuotes", "@", 
                  RowBox[{"line", "[", 
                   RowBox[{"[", "5", "]"}], "]"}]}]}], ",", 
                RowBox[{
                 RowBox[{"wrapInQuotes", "@", "\"\<Strand\>\""}], "\[Rule]", 
                 " ", 
                 RowBox[{"wrapInQuotes", "@", 
                  RowBox[{"line", "[", 
                   RowBox[{"[", "6", "]"}], "]"}]}]}]}], "|>"}]}], ";", 
             "\[IndentingNewLine]", "\[IndentingNewLine]", 
             RowBox[{"(*", 
              RowBox[{
               RowBox[{"WriteString", "[", 
                RowBox[{"outputStream", ",", 
                 RowBox[{"ToString", "[", 
                  RowBox[{"wrapInQuotes", "/@", "line"}], "]"}]}], "]"}], 
               ";"}], "*)"}], "\[IndentingNewLine]", 
             RowBox[{"WriteString", "[", 
              RowBox[{"outputStream", ",", 
               RowBox[{"ToString", "@", "bed"}]}], "]"}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"lineIndex", "<", "fileLines"}], ",", 
               RowBox[{
                RowBox[{"WriteString", "[", 
                 RowBox[{"outputStream", ",", "\"\<,\>\""}], "]"}], ";"}]}], 
              "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
             RowBox[{"lineIndex", "+=", "1"}], ";"}]}], "\[IndentingNewLine]",
            "]"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", ",", 
         RowBox[{"ProgressIndicator", "[", 
          RowBox[{"lineIndex", ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "fileLines"}], "}"}]}], "]"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"End", " ", "the", " ", "list"}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"WriteString", "[", 
        RowBox[{"outputStream", ",", "\"\<}]\>\""}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"Close", " ", "Streams"}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"Close", "[", "inputStream", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Close", "[", "outputStream", "]"}], ";"}]}], 
     "\[IndentingNewLine]", "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.707726057741376*^9, 3.707726063718505*^9}, {
   3.707726677594006*^9, 3.707727068385997*^9}, {3.707727107661957*^9, 
   3.707727230206149*^9}, {3.707727272519664*^9, 3.707727329314639*^9}, {
   3.707727425203504*^9, 3.707727570332952*^9}, {3.707727604391677*^9, 
   3.707727683311118*^9}, {3.707728003954296*^9, 3.707728010294633*^9}, {
   3.707728342519993*^9, 3.707728343005447*^9}, 3.707729345550119*^9, {
   3.707729565553605*^9, 3.7077295657722387`*^9}, {3.707729849990018*^9, 
   3.7077298661140842`*^9}, {3.707730091906427*^9, 3.70773009961733*^9}, {
   3.707730140366424*^9, 3.707730166555263*^9}, {3.70773021748138*^9, 
   3.707730301854628*^9}, {3.707730436721373*^9, 3.707730449368718*^9}, {
   3.7077305032701*^9, 3.707730549943378*^9}, {3.707730581971302*^9, 
   3.707730612307269*^9}, {3.707730936307125*^9, 3.707730939698001*^9}, {
   3.7077310178012333`*^9, 3.707731022711973*^9}, {3.707731270508087*^9, 
   3.70773131618795*^9}, {3.7077313595513563`*^9, 3.7077313720617447`*^9}, {
   3.707732698887019*^9, 3.70773279489996*^9}, {3.70773284241829*^9, 
   3.707732843369066*^9}, {3.7077328907291403`*^9, 3.707732900316318*^9}, 
   3.70773295796946*^9, {3.707733040590172*^9, 3.7077330414365463`*^9}, {
   3.707737658864312*^9, 3.707737715186131*^9}, {3.707737762244154*^9, 
   3.707737773614604*^9}, {3.707738307495138*^9, 3.707738356596043*^9}, {
   3.7078653580713577`*^9, 
   3.707865477423015*^9}},ExpressionUUID->"4a3ad701-ffae-4d4e-984d-\
b6de60d89dfe"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Sequence Manipulation", "Subchapter",
 CellChangeTimes->{{3.707738698754126*^9, 
  3.707738704537774*^9}},ExpressionUUID->"4e2995cb-9d3c-45b2-aa9f-\
ba6f9372be70"],

Cell[CellGroupData[{

Cell["Random sample a give number from our dataset", "Section",
 CellChangeTimes->{{3.70786549384503*^9, 
  3.707865503072047*^9}},ExpressionUUID->"eebd0c70-0422-4a62-b217-\
cadb0d6cf792"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "A", " ", "readable", " ", "wrapper", " ", "for", " ", "an", " ", 
    "otherwise", " ", "not", " ", "needed", " ", "function"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"randomSampleSequences", "[", 
    RowBox[{"dataset_Dataset", ",", "number_Integer"}], "]"}], ":=", 
   RowBox[{"RandomSample", "[", 
    RowBox[{"dataset", ",", "number"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.707738720252082*^9, 3.707738742107463*^9}, {
  3.7078655057403183`*^9, 
  3.707865523838078*^9}},ExpressionUUID->"5eb17de4-3083-4f74-af31-\
5b333ba4ae17"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Filter a Dataset of sequences for those within a certain length\
\>", "Section",
 CellChangeTimes->{{3.707865548256627*^9, 
  3.707865561288237*^9}},ExpressionUUID->"c2c00782-3ae7-4134-86f6-\
6f66d4c90f23"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "A", " ", "readable", " ", "wrapper", " ", "for", " ", "an", " ", 
    "otherwise", " ", "not", " ", "needed", " ", "function"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"filterSequencesWithLength", "[", 
    RowBox[{"data_", ",", "minLength_", ",", "maxLength_"}], "]"}], ":=", 
   RowBox[{"data", "[", 
    RowBox[{"Select", "[", 
     RowBox[{
      RowBox[{"minLength", "\[LessEqual]", 
       RowBox[{"#Stop", "-", "#Start"}], "\[LessEqual]", "maxLength"}], "&"}],
      "]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.7077406863972473`*^9, 3.707740692340116*^9}, {
  3.707865528232048*^9, 
  3.7078655395192633`*^9}},ExpressionUUID->"2084e368-cfad-4015-a4e9-\
7ef7cf0fb510"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Pad sequences to a set length", "Section",
 CellChangeTimes->{{3.707865568416643*^9, 
  3.707865580759742*^9}},ExpressionUUID->"d3228253-d59d-473d-8004-\
454053bdb89d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"padSequences", "::", "usage"}], "=", 
   "\"\<padSequences[sequenceData, chromosomeLengths, \
padTo]:\\n\\tsequenceData:\\t\\ta Dataset of \
sequences\\n\\tchromosomeLengths:\\ta Dataset of chromosome \
lengths\\n\\tpadTo:\\t\\t\\tan integer of how long each sequence in \
sequenceData should be.\\n\\npads all the sequences in sequenceData into a \
set length.\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"padSequences", "[", 
   RowBox[{
   "sequenceData_Dataset", ",", "chromosomeLengths_Dataset", ",", 
    "padTo_Integer"}], "]"}], ":=", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "upstream", ",", " ", "downstream", ",", " ", "nucleotidesNeeded", ",", 
      " ", "length"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"sequenceData", "[", "\[IndentingNewLine]", 
     RowBox[{"All", ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"<|", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"\"\<Chromosome\>\"", "\[Rule]", " ", 
          RowBox[{"#", "[", "\"\<Chromosome\>\"", "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"length", "=", 
           RowBox[{
            RowBox[{"#", "[", "\"\<Stop\>\"", "]"}], "-", 
            RowBox[{"#", "[", "\"\<Start\>\"", "]"}]}]}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{
           "How", " ", "many", " ", "NTs", " ", "are", " ", "needed", " ", 
            "to", " ", "make", " ", "exon", " ", "specified", " ", "length"}],
            " ", "*)"}], "\[IndentingNewLine]", 
          RowBox[{"nucleotidesNeeded", "=", 
           RowBox[{"padTo", "-", "length"}]}], ";", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{
           "Randomly", " ", "select", " ", "an", " ", "integer", " ", "in", 
            " ", "that", " ", "range", " ", "to", " ", "pad", " ", 
            "upstream"}], " ", "*)"}], "\[IndentingNewLine]", 
          RowBox[{"upstream", "=", 
           RowBox[{"RandomInteger", "[", 
            RowBox[{"{", 
             RowBox[{"1", ",", "nucleotidesNeeded"}], "}"}], "]"}]}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"If", " ", "start"}], " ", "-", " ", "upstream"}], " ", 
             "<", " ", "1"}], ",", " ", 
            RowBox[{
            "update", " ", "upstream", " ", "to", " ", "start", " ", "at", 
             " ", "1"}]}], " ", "*)"}], "\[IndentingNewLine]", 
          RowBox[{"If", "[", " ", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"#", "[", "\"\<Start\>\"", "]"}], "-", "upstream"}], 
             "<", "1"}], ",", 
            RowBox[{"upstream", "=", 
             RowBox[{
              RowBox[{"#", "[", "\"\<Start\>\"", "]"}], "-", "1"}]}]}], "]"}],
           ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{
            RowBox[{
            "Set", " ", "downstream", " ", "as", " ", "the", " ", "remainder",
              " ", "of", " ", "needed"}], " ", "-", " ", "upstream"}], " ", 
           "*)"}], "\[IndentingNewLine]", 
          RowBox[{"downstream", "=", 
           RowBox[{"(", 
            RowBox[{"nucleotidesNeeded", "-", "upstream"}], ")"}]}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"If", " ", "stop"}], " ", "+", " ", "downstream"}], " ",
              ">", " ", "chromosomeLength"}], ",", " ", "shift"}], " ", 
           "*)"}], "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"#", "[", "\"\<Stop\>\"", "]"}], "+", "downstream"}], 
             ">", 
             RowBox[{"chromosomeLengths", "[", 
              RowBox[{"#", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ",", 
            RowBox[{
             RowBox[{"downstream", "=", 
              RowBox[{
               RowBox[{"chromosomeLengths", "[", 
                RowBox[{"#", "[", "\"\<Chromosome\>\"", "]"}], "]"}], " ", 
               "-", " ", 
               RowBox[{"#", "[", "\"\<Stop\>\"", "]"}]}]}], ";", " ", 
             RowBox[{"upstream", "=", 
              RowBox[{"(", 
               RowBox[{"nucleotidesNeeded", "-", "downstream"}], ")"}]}]}]}], 
           "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"\"\<Start\>\"", "\[Rule]", " ", 
           RowBox[{
            RowBox[{"#", "[", "\"\<Start\>\"", "]"}], "-", "upstream"}]}]}], 
         ",", "\[IndentingNewLine]", 
         RowBox[{"\"\<Stop\>\"", "\[Rule]", 
          RowBox[{
           RowBox[{"#", "[", "\"\<Stop\>\"", "]"}], "+", "downstream"}]}], 
         ",", "\[IndentingNewLine]", 
         RowBox[{"\"\<Name\>\"", "\[Rule]", " ", 
          RowBox[{"\"\<Padded_\>\"", "<>", 
           RowBox[{"#", "[", "\"\<Name\>\"", "]"}]}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<Score\>\"", "\[Rule]", 
          RowBox[{"#", "[", "\"\<Score\>\"", "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<Strand\>\"", "\[Rule]", 
          RowBox[{"#", "[", "\"\<Strand\>\"", "]"}]}]}], 
        "\[IndentingNewLine]", "|>"}], "&"}]}], "\[IndentingNewLine]", 
     "]"}]}], "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->{{3.707738755310813*^9, 3.707738897727296*^9}, {
  3.707865585300329*^9, 3.70786562202153*^9}, {3.707865653345272*^9, 
  3.7078657878957148`*^9}},ExpressionUUID->"1d179f61-d14c-41d2-82fd-\
ea06882e2d28"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Extract specified sequences from the genome ", "Section",
 CellChangeTimes->{{3.7078658237067537`*^9, 
  3.707865834938262*^9}},ExpressionUUID->"01868994-033b-4d4b-81a9-\
3f679ea8e246"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"extractSequences", "::", "usage"}], "=", 
   "\"\<extractSequences[referenceFile, bedFile, \
outputFile]:\\n\\treferenceFile:\\tfile of the reference genome\\n\\tbedFile:\
\\t\\ta file containg the start/stop locations of regions to extract from \
referenceFile\\n\\toutputFile:\\t\\ta file in which to store the extracted \
sequences.\\n\\nThis function requires bedtools.\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"extractSequences", "[", 
    RowBox[{"referenceFile_", ",", " ", "bedFile_", ",", " ", "outputFile_"}],
     "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "fastaFromBed", ",", "fastaInput", ",", "bed", ",", "fastaOut", ",", 
       "forcedStrandedness", ",", "named", ",", "tabbed", ",", "command"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"fastaFromBed", " ", "=", " ", "\"\<fastaFromBed \>\""}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"fastaInput", " ", "=", " ", "\"\<-fi \>\""}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"bed", " ", "=", " ", "\"\<-bed \>\""}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"fastaOut", "=", "\"\<-fo \>\""}], ";", "\[IndentingNewLine]", 
      RowBox[{"forcedStrandedness", "=", "\"\<-s \>\""}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"named", "=", "\"\<-name \>\""}], ";", "\[IndentingNewLine]", 
      RowBox[{"tabbed", "=", "\"\<-tab \>\""}], ";", "\[IndentingNewLine]", 
      RowBox[{"command", " ", "=", " ", 
       RowBox[{
       "fastaFromBed", " ", "<>", " ", "fastaInput", "<>", "referenceFile", 
        "<>", "\"\< \>\"", "<>", "bed", "<>", "bedFile", "<>", "\"\< \>\"", "<>",
         "fastaOut", "<>", "outputFile", "<>", "\"\< \>\"", "<>", 
        "forcedStrandedness", "<>", "named", "<>", "tabbed"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Run", "[", "command", "]"}]}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7077393882157288`*^9, 3.707739433454959*^9}, {
  3.707739476230792*^9, 3.70773950037183*^9}, {3.707865845044895*^9, 
  3.707866015757407*^9}},ExpressionUUID->"e753a734-7d4d-4079-920d-\
20260c5687d2"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Pipeline", "Subchapter",
 CellChangeTimes->{{3.707740386479279*^9, 
  3.7077403873275843`*^9}},ExpressionUUID->"abb079c2-2a50-48e2-a286-\
d47feab5a433"],

Cell[CellGroupData[{

Cell["A wrapper for most of the above functions", "Section",
 CellChangeTimes->{{3.707866051834681*^9, 
  3.707866062392645*^9}},ExpressionUUID->"6f8560f5-168e-4225-9261-\
7db3e94e2da8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"generateTrainingSet", "[", 
   RowBox[{
    RowBox[{"\"\<Exon\>\"", "\[Rule]", " ", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<Data\>\"", "\[Rule]", "edata_"}], ",", 
       RowBox[{"\"\<Min\>\"", "\[Rule]", "emin_"}], ",", 
       RowBox[{"\"\<Max\>\"", "\[Rule]", "emax_"}]}], "|>"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<Intron\>\"", "\[Rule]", " ", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<Data\>\"", "\[Rule]", "idata_"}], ",", 
       RowBox[{"\"\<Min\>\"", "\[Rule]", "imin_"}], ",", 
       RowBox[{"\"\<Max\>\"", "\[Rule]", "imax_"}]}], "|>"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<Samples\>\"", "\[Rule]", "samples_"}], ",", 
    RowBox[{"\"\<PaddingLength\>\"", "\[Rule]", "paddingLength_"}], ",", 
    RowBox[{"\"\<ChromosomeLengths\>\"", "\[Rule]", "chromosomeLengths_"}]}], 
   "]"}], ":=", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
     "filteredExons", ",", "filteredIntrons", ",", "\[IndentingNewLine]", 
      "randomExons", ",", "randomIntrons", ",", "\[IndentingNewLine]", 
      "paddedExons", ",", "paddedIntrons", ",", "\[IndentingNewLine]", 
      "trainingExons", ",", "trainingIntrons", ",", "\[IndentingNewLine]", 
      "trainingData", ",", " ", 
      RowBox[{"dummyTimeStep", "=", "0"}], ",", "temp"}], 
     "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Monitor", "[", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"Filter", " ", "Exons"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"dummyTimeStep", "+=", "1"}], ";", "\[IndentingNewLine]", 
        RowBox[{"temp", "=", 
         RowBox[{"PrintTemporary", "[", "\"\<Filtering Exons\>\"", "]"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"filteredExons", "=", 
         RowBox[{"filterSequencesWithLength", "[", 
          RowBox[{"edata", ",", "emin", ",", "emax"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"NotebookDelete", "[", "temp", "]"}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"Filter", " ", "Introns"}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"dummyTimeStep", "+=", "1"}], ";", "\[IndentingNewLine]", 
        RowBox[{"temp", "=", 
         RowBox[{"PrintTemporary", "[", "\"\<Filtering Introns\>\"", "]"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"filteredIntrons", "=", 
         RowBox[{"filterSequencesWithLength", "[", 
          RowBox[{"idata", ",", "imin", ",", "imax"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"NotebookDelete", "[", "temp", "]"}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"Sample", " ", "Exons"}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"dummyTimeStep", "+=", "1"}], ";", "\[IndentingNewLine]", 
        RowBox[{"temp", "=", 
         RowBox[{"PrintTemporary", "[", "\"\<Sampling Exons\>\"", "]"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"randomExons", " ", "=", " ", 
         RowBox[{"randomSampleSequences", "[", 
          RowBox[{"filteredExons", ",", "samples"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"NotebookDelete", "[", "temp", "]"}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"Sample", " ", "Introns"}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"dummyTimeStep", "+=", "1"}], ";", "\[IndentingNewLine]", 
        RowBox[{"temp", "=", 
         RowBox[{"PrintTemporary", "[", "\"\<Sampling Introns\>\"", "]"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"randomIntrons", " ", "=", " ", 
         RowBox[{"randomSampleSequences", "[", 
          RowBox[{"filteredIntrons", ",", "samples"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"NotebookDelete", "[", "temp", "]"}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"Padding", " ", "Exons"}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"dummyTimeStep", "+=", "1"}], ";", "\[IndentingNewLine]", 
        RowBox[{"temp", "=", 
         RowBox[{"PrintTemporary", "[", "\"\<Padding Exons\>\"", "]"}]}], ";",
         "\[IndentingNewLine]", 
        RowBox[{"paddedExons", " ", "=", " ", 
         RowBox[{"padSequences", "[", 
          RowBox[{
          "randomExons", ",", "chromosomeLengths", ",", "paddingLength"}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"NotebookDelete", "[", "temp", "]"}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"Padding", " ", "Introns"}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"dummyTimeStep", "+=", "1"}], ";", "\[IndentingNewLine]", 
        RowBox[{"temp", "=", 
         RowBox[{"PrintTemporary", "[", "\"\<Padding Introns\>\"", "]"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"paddedIntrons", " ", "=", " ", 
         RowBox[{"padSequences", "[", 
          RowBox[{
          "randomIntrons", ",", "chromosomeLengths", ",", "paddingLength"}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"NotebookDelete", "[", "temp", "]"}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"Export", " ", "Padded", " ", "BED", " ", "File"}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"dummyTimeStep", "+=", "1"}], ";", "\[IndentingNewLine]", 
        RowBox[{"temp", "=", 
         RowBox[{
         "PrintTemporary", "[", "\"\<Exporting padded sequences\>\"", "]"}]}],
         ";", "\[IndentingNewLine]", 
        RowBox[{"Export", "[", 
         RowBox[{
         "\"\<padded_training_data.txt\>\"", ",", "\[IndentingNewLine]", 
          RowBox[{"Join", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Normal", "@", 
             RowBox[{"Normal", "@", 
              RowBox[{"paddedExons", "[", "Values", "]"}]}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Normal", "@", 
             RowBox[{"Normal", "@", 
              RowBox[{"paddedIntrons", "[", "Values", "]"}]}]}]}], 
           "\[IndentingNewLine]", "]"}], ",", "\"\<TSV\>\""}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"NotebookDelete", "[", "temp", "]"}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"Extract", " ", "Sequences", " ", "from", " ", "Genome"}], 
         "*)"}], "\[IndentingNewLine]", 
        RowBox[{"dummyTimeStep", "+=", "1"}], ";", "\[IndentingNewLine]", 
        RowBox[{"temp", "=", 
         RowBox[{
         "PrintTemporary", "[", 
          "\"\<Extracting padded sequences from genome\>\"", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"extractSequences", "[", 
         RowBox[{
         "\"\<hg38.fa\>\"", ",", "\"\<padded_training_data.txt\>\"", ",", 
          "\"\<training_data.fa\>\""}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"NotebookDelete", "[", "temp", "]"}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"Convert", " ", "Sequences", " ", "to", " ", "Dataset"}], 
         "*)"}], "\[IndentingNewLine]", 
        RowBox[{"dummyTimeStep", "+=", "1"}], ";", "\[IndentingNewLine]", 
        RowBox[{"temp", "=", 
         RowBox[{
         "PrintTemporary", "[", "\"\<Converting sequences to Dataset\>\"", 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"FastaTabToDataset", "[", "\"\<training_data.fa\>\"", "]"}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"NotebookDelete", "[", "temp", "]"}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"Load", " ", "Sequence", " ", "Dataset"}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"dummyTimeStep", "+=", "1"}], ";", "\[IndentingNewLine]", 
        RowBox[{"temp", "=", 
         RowBox[{
         "PrintTemporary", "[", "\"\<Loading Sequence Dataset\>\"", "]"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"trainingData", "=", 
         RowBox[{"Get", "@", "\"\<training_data.m\>\""}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"NotebookDelete", "[", "temp", "]"}], ";"}], 
       "\[IndentingNewLine]", "\[IndentingNewLine]", ",", 
       RowBox[{"ProgressIndicator", "[", 
        RowBox[{"dummyTimeStep", ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "10"}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
      "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "trainingData", "]"}], ";"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.707740388537752*^9, 3.707740623710849*^9}, {
  3.707740702682139*^9, 3.707740945083448*^9}, {3.7077430196910963`*^9, 
  3.707743079009918*^9}, {3.707743111976804*^9, 3.707743348840803*^9}, {
  3.707743437137107*^9, 3.7077434411101713`*^9}, {3.707743490331937*^9, 
  3.707743500411223*^9}},ExpressionUUID->"491af0cb-d363-4260-b483-\
d0de22ec6764"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Network", "Subchapter",
 CellChangeTimes->{{3.707743611588047*^9, 
  3.70774361293565*^9}},ExpressionUUID->"5e3e810d-beca-4ad7-b7a8-\
1b17a8087a6d"],

Cell["See cnn.wls", "Text",
 CellChangeTimes->{{3.708245617480504*^9, 
  3.708245635490024*^9}},ExpressionUUID->"ff039151-abe3-459f-b7f4-\
12119f8505cc"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Process coding_regions.bed to coding_regions.m", "Chapter",
 CellChangeTimes->{{3.707738503027637*^9, 
  3.707738517411861*^9}},ExpressionUUID->"b6ba7688-defd-4a98-9571-\
2d52098c57ed"],

Cell[BoxData[
 RowBox[{"convertBED", "[", "\"\<coding_regions.bed\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.7077267633649797`*^9, 
  3.707726778790495*^9}},ExpressionUUID->"5789a617-10ee-4d62-b431-\
8e26804ce017"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Load Data", "Chapter",
 CellChangeTimes->{{3.707738411661707*^9, 
  3.707738412869109*^9}},ExpressionUUID->"4988239d-a4ca-4948-81ff-\
894ebb721350"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"codingRegions", "=", 
   RowBox[{"Get", "@", "\"\<coding_regions.m\>\""}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"chromosomeLengths", "=", 
   RowBox[{"Get", "@", "\"\<chromosome_lengths.m\>\""}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.707738415828999*^9, 3.70773846870008*^9}, {
  3.707739082898141*^9, 
  3.7077390900988207`*^9}},ExpressionUUID->"37056d24-49b4-41b0-8a13-\
783fbf6f6095"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Filter for \[OpenCurlyDoubleQuote]proper\[CloseCurlyDoubleQuote] \
chromosomes", "Chapter",
 CellChangeTimes->{{3.707739093330268*^9, 
  3.707739098250841*^9}},ExpressionUUID->"c259cad9-7e2b-465c-9cdf-\
9bf98107ba02"],

Cell["Here we are only using Chromosome 1-21 X, Y, and M.", "Text",
 CellChangeTimes->{{3.7082456769245996`*^9, 
  3.708245688740267*^9}},ExpressionUUID->"1a261bb4-cfca-4dd9-ae32-\
2b4a1482669d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"codingRegions", "=", 
   RowBox[{"codingRegions", "[", 
    RowBox[{"Select", "[", 
     RowBox[{
      RowBox[{"!", 
       RowBox[{"StringContainsQ", "[", 
        RowBox[{
         RowBox[{"#", "[", "\"\<Chromosome\>\"", "]"}], ",", "\"\<_\>\""}], 
        "]"}]}], "&"}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7077391056241007`*^9, 
  3.707739108525271*^9}},ExpressionUUID->"50e68ccf-f809-4af6-8a6d-\
2921c3b9daf6"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Extract relevant parts", "Chapter",
 CellChangeTimes->{{3.707738480946357*^9, 3.707738483930008*^9}, {
  3.707739212659782*^9, 
  3.7077392127379923`*^9}},ExpressionUUID->"3dd30c34-0aa7-4ebc-b58f-\
fd5571b54947"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"exons", "=", 
   RowBox[{"codingRegions", "[", 
    RowBox[{"Select", "[", 
     RowBox[{
      RowBox[{"StringContainsQ", "[", 
       RowBox[{"#Name", ",", "\"\<exon\>\""}], "]"}], "&"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"introns", "=", 
   RowBox[{"codingRegions", "[", 
    RowBox[{"Select", "[", 
     RowBox[{
      RowBox[{"StringContainsQ", "[", 
       RowBox[{"#Name", ",", "\"\<intron\>\""}], "]"}], "&"}], "]"}], "]"}]}],
   ";"}], "\n", 
 RowBox[{
  RowBox[{"chromosomes", "=", 
   RowBox[{"DeleteDuplicates", "@", 
    RowBox[{"Normal", "@", 
     RowBox[{"codingRegions", "[", 
      RowBox[{"All", ",", " ", "\"\<Chromosome\>\""}], "]"}]}]}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.707738415828999*^9, 
  3.7077384602572603`*^9}},ExpressionUUID->"1f4db94a-8de2-4927-acf5-\
f20606f2703d"],

Cell["See number of exons with the desired length", "Text",
 CellChangeTimes->{{3.708245701260969*^9, 
  3.708245706469531*^9}},ExpressionUUID->"167ed6f3-9f60-44c7-84ac-\
e1724f074b51"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"exons", "[", 
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{"200", "<", 
      RowBox[{"#Stop", "-", "#Start"}], "<", "500"}], "&"}], "]"}], "]"}], "//",
   "Length"}]], "Input",
 CellChangeTimes->{{3.7080200325055923`*^9, 3.708020037875251*^9}, {
  3.7080200767017803`*^9, 3.708020141684553*^9}, {3.708023510334929*^9, 
  3.708023600374117*^9}},ExpressionUUID->"91a7dfd0-a173-40ab-a96c-\
eb961dc1fb94"],

Cell[BoxData["182026"], "Output",
 CellChangeTimes->{
  3.708020038948357*^9, {3.708020101134276*^9, 3.708020143985429*^9}, {
   3.7080235153893023`*^9, 
   3.708023602835244*^9}},ExpressionUUID->"0286baf2-861f-430b-be4e-\
da2f4b5b5c6a"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Generate Training Data", "Chapter",
 CellChangeTimes->{{3.707743539635871*^9, 3.707743543028037*^9}, {
  3.707744088222971*^9, 
  3.707744088517995*^9}},ExpressionUUID->"e4146b6d-f32d-4887-bc3c-\
6891b0069c9a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"trainingData", "=", 
   RowBox[{"generateTrainingSet", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\"\<Exon\>\"", "\[Rule]", " ", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<Data\>\"", "\[Rule]", "exons"}], ",", 
        RowBox[{"\"\<Min\>\"", "\[Rule]", "200"}], ",", 
        RowBox[{"\"\<Max\>\"", "\[Rule]", "500"}]}], "|>"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<Intron\>\"", "\[Rule]", " ", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<Data\>\"", "\[Rule]", "introns"}], ",", 
        RowBox[{"\"\<Min\>\"", "\[Rule]", "600"}], ",", 
        RowBox[{"\"\<Max\>\"", "\[Rule]", "Infinity"}]}], "|>"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<Samples\>\"", "\[Rule]", "180000"}], ",", 
     RowBox[{"\"\<PaddingLength\>\"", "\[Rule]", "600"}], ",", 
     RowBox[{"\"\<ChromosomeLengths\>\"", "\[Rule]", "chromosomeLengths"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.707743358689095*^9, 3.707743386663845*^9}, {
  3.707743458047868*^9, 3.707743459622446*^9}, {3.7077435463421087`*^9, 
  3.70774355895673*^9}, {3.707743953743806*^9, 3.70774395462213*^9}, {
  3.707744084550679*^9, 3.7077440849343987`*^9}, {3.707746701082774*^9, 
  3.707746706785598*^9}, {3.707851213729229*^9, 3.707851240400876*^9}, {
  3.708023683491284*^9, 
  3.7080237062219973`*^9}},ExpressionUUID->"1f6b0ad4-877d-408d-996d-\
36f35fd24f10"],

Cell[CellGroupData[{

Cell["\<\
Grab only those sequences which do not contain the N character\
\>", "Subchapter",
 CellChangeTimes->{{3.7078516676400833`*^9, 
  3.707851685877021*^9}},ExpressionUUID->"535a8318-66e8-4728-92f8-\
b86a33907b2e"],

Cell["The N indicates un-sequenced nucleotides", "Text",
 CellChangeTimes->{{3.708245766746456*^9, 3.7082457698015347`*^9}, {
  3.708245841695705*^9, 
  3.708245846047871*^9}},ExpressionUUID->"07c25543-5f8a-481f-8d0d-\
8be94199aa2d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"filteredTrainingSet", "=", 
   RowBox[{"trainingData", "[", 
    RowBox[{"Select", "[", 
     RowBox[{
      RowBox[{"With", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"chars", "=", 
          RowBox[{"Characters", "@", "#Sequence"}]}], "}"}], ",", 
        RowBox[{"AllTrue", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"StringContainsQ", "[", 
              RowBox[{"#", ",", 
               RowBox[{"(", 
                RowBox[{
                "\"\<A\>\"", "|", "\"\<T\>\"", "|", "\"\<G\>\"", "|", 
                 "\"\<C\>\""}], ")"}]}], "]"}], "&"}], "/@", "chars"}], ")"}],
           ",", 
          RowBox[{
           RowBox[{"#", "\[Equal]", "True"}], "&"}]}], "]"}]}], "]"}], "&"}], 
     "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.707851588296122*^9, 
  3.707851619688936*^9}},ExpressionUUID->"3c881927-5cf0-4818-b0f8-\
182eff8d8fd5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<training_data_massive.m\>\"", ",", "filteredTrainingSet"}], 
   "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.7078517828328342`*^9, 3.707851816278379*^9}, {
  3.7080246376304407`*^9, 
  3.708024639014217*^9}},ExpressionUUID->"aff87ee4-1f1b-4445-89f2-\
32b03f61d641"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Or load it", "Subchapter",
 CellChangeTimes->{{3.707744048020705*^9, 
  3.707744049371544*^9}},ExpressionUUID->"d603433f-149a-4028-add5-\
dd3b9f599224"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"trainingData", "=", 
   RowBox[{"Get", "@", "\"\<training_data.m\>\""}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"trainingData", "=", 
   RowBox[{"Get", "@", "\"\<training_data_massive.m\>\""}]}], ";"}]}], "Input",\

 CellChangeTimes->{{3.7077439998391247`*^9, 3.7077440003747587`*^9}, {
   3.707744051636372*^9, 3.707744052677516*^9}, 3.707744087275447*^9, {
   3.708027214921442*^9, 
   3.708027218813518*^9}},ExpressionUUID->"f9e94010-af4e-4ea2-b6b0-\
40a088d3731b"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.708024866116184*^9, 3.7080248664783783`*^9}, 
   3.7080251710460567`*^9},ExpressionUUID->"1dc1328c-8c71-48f5-8f30-\
d051aa32d2d0"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Partition Data into sets", "Chapter",
 CellChangeTimes->{{3.707744077309312*^9, 
  3.7077440814455957`*^9}},ExpressionUUID->"1f330b75-2005-4540-b9f6-\
179f226d624c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"trainingSet", "=", 
   RowBox[{"RandomSample", "[", 
    RowBox[{"trainingData", ",", "252000"}], "]"}]}], ";", " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Use", " ", "Complement", " ", "to", " ", "take", " ", "samlpes", " ", 
    "not", " ", "used", " ", "already"}], "*)"}], "\n", 
  RowBox[{"validationSet", "=", 
   RowBox[{"RandomSample", "[", 
    RowBox[{
     RowBox[{"Complement", "[", 
      RowBox[{"trainingData", ",", "trainingSet"}], "]"}], ",", "72000"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"testSet", "=", 
   RowBox[{"Complement", "[", 
    RowBox[{"trainingData", ",", "validationSet", ",", "trainingSet"}], 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{
  3.707744225065257*^9, {3.7077442765269213`*^9, 3.707744301587995*^9}, {
   3.707744340903779*^9, 3.707744374872683*^9}, {3.707851866219325*^9, 
   3.70785187331423*^9}, {3.708024874372005*^9, 3.708024887231945*^9}, {
   3.708245912765398*^9, 
   3.708245921832116*^9}},ExpressionUUID->"ca33a97b-3c9d-42ec-91aa-\
14efd04667ea"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Remove names to have only sequence and class", "Chapter",
 CellChangeTimes->{{3.707744395819495*^9, 
  3.7077444010104027`*^9}},ExpressionUUID->"eb54d128-3b89-48c6-b8d0-\
bb9444eb3c54"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"trainingSet", "=", 
   RowBox[{"trainingSet", "[", 
    RowBox[{"All", ",", 
     RowBox[{
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<Input\>\"", "\[Rule]", 
         RowBox[{"#", "[", "\"\<Sequence\>\"", "]"}]}], ",", 
        RowBox[{"\"\<Output\>\"", "\[Rule]", " ", 
         RowBox[{"#", "[", "\"\<Class\>\"", "]"}]}]}], "|>"}], "&"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"validationSet", "=", 
   RowBox[{"validationSet", "[", 
    RowBox[{"All", ",", 
     RowBox[{
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<Input\>\"", "\[Rule]", 
         RowBox[{"#", "[", "\"\<Sequence\>\"", "]"}]}], ",", 
        RowBox[{"\"\<Output\>\"", "\[Rule]", " ", 
         RowBox[{"#", "[", "\"\<Class\>\"", "]"}]}]}], "|>"}], "&"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"testSet", "=", 
   RowBox[{"testSet", "[", 
    RowBox[{"All", ",", 
     RowBox[{
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<Input\>\"", "\[Rule]", 
         RowBox[{"#", "[", "\"\<Sequence\>\"", "]"}]}], ",", 
        RowBox[{"\"\<Output\>\"", "\[Rule]", " ", 
         RowBox[{"#", "[", "\"\<Class\>\"", "]"}]}]}], "|>"}], "&"}]}], 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.707744361632722*^9, 3.707744389587611*^9}, {
  3.7077448667830477`*^9, 
  3.707744877505624*^9}},ExpressionUUID->"4913dac4-0a02-4295-a12a-\
a5c820039468"],

Cell[CellGroupData[{

Cell["Export Partition of Training Data", "Subchapter",
 CellChangeTimes->{{3.7078643882191553`*^9, 
  3.707864395719192*^9}},ExpressionUUID->"3232cb4f-7d59-407b-a44b-\
56c85a986e95"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<training_set_massive.mx\>\"", ",", "trainingSet"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<validation_set_massive.mx\>\"", ",", "validationSet"}], "]"}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<test_set_massive.mx\>\"", ",", "testSet"}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.707851909867709*^9, 3.707851940958848*^9}, {
  3.70802492181026*^9, 
  3.708024929590514*^9}},ExpressionUUID->"89d4df31-eaf4-406a-9235-\
85a59245e625"]
}, Open  ]]
}, Open  ]],

Cell["Go to cnn.wls", "Chapter",
 CellChangeTimes->{{3.708245955518858*^9, 
  3.708245959030201*^9}},ExpressionUUID->"d346218e-dbd8-4011-9694-\
4fa59f0c88f0"]
}, Open  ]]
},
Evaluator->"local_2",
WindowSize->{1280, 684},
WindowMargins->{{0, Automatic}, {Automatic, -1}},
FrontEndVersion->"11.1 for Mac OS X x86 (32-bit, 64-bit Kernel) (April 27, \
2017)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 240, 4, 92, "Title", "ExpressionUUID" -> \
"cec6b53b-f55e-49c5-9f7e-647850a94cda"],
Cell[CellGroupData[{
Cell[845, 30, 150, 3, 65, "Chapter", "ExpressionUUID" -> \
"285b8e74-1ded-4b78-946c-0cb2940fdcca"],
Cell[998, 35, 1296, 32, 117, "Input", "ExpressionUUID" -> \
"54e2d0d0-1ee6-4a3d-9f31-87347bc087bc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2331, 72, 164, 3, 65, "Chapter", "ExpressionUUID" -> \
"5e2c105c-3b63-450b-ad20-9b9d20cacc88"],
Cell[CellGroupData[{
Cell[2520, 79, 167, 3, 63, "Subchapter", "ExpressionUUID" -> \
"2a9ac0d6-9a31-489c-b7ab-40e6e6534c28"],
Cell[CellGroupData[{
Cell[2712, 86, 156, 3, 64, "Section", "ExpressionUUID" -> \
"5434fd4e-917e-45fe-8627-f1950a4926c0"],
Cell[2871, 91, 1212, 32, 117, "Input", "ExpressionUUID" -> \
"7a9a7289-69c7-4015-8e53-040b9d5c4b48"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4120, 128, 158, 2, 64, "Section", "ExpressionUUID" -> \
"fc934d39-e6da-418b-8f24-42db5b27164e"],
Cell[4281, 132, 7527, 168, 1188, "Input", "ExpressionUUID" -> \
"82ab7833-b493-49c0-b2e8-a8f3d41e9805"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[11857, 306, 161, 3, 63, "Subchapter", "ExpressionUUID" -> \
"4175cc22-7c24-4901-b45c-3cc486d38b31"],
Cell[CellGroupData[{
Cell[12043, 313, 193, 3, 64, "Section", "ExpressionUUID" -> \
"fd7db4b7-9e13-46bb-bb25-e1944e6c1c6c"],
Cell[12239, 318, 9497, 199, 1083, "Input", "ExpressionUUID" -> \
"4a3ad701-ffae-4d4e-984d-b6de60d89dfe"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[21785, 523, 169, 3, 63, "Subchapter", "ExpressionUUID" -> \
"4e2995cb-9d3c-45b2-aa9f-ba6f9372be70"],
Cell[CellGroupData[{
Cell[21979, 530, 188, 3, 64, "Section", "ExpressionUUID" -> \
"eebd0c70-0422-4a62-b217-cadb0d6cf792"],
Cell[22170, 535, 624, 15, 54, "Input", "ExpressionUUID" -> \
"5eb17de4-3083-4f74-af31-5b333ba4ae17"]
}, Open  ]],
Cell[CellGroupData[{
Cell[22831, 555, 216, 5, 64, "Section", "ExpressionUUID" -> \
"c2c00782-3ae7-4134-86f6-6f66d4c90f23"],
Cell[23050, 562, 765, 19, 54, "Input", "ExpressionUUID" -> \
"2084e368-cfad-4015-a4e9-7ef7cf0fb510"]
}, Open  ]],
Cell[CellGroupData[{
Cell[23852, 586, 174, 3, 64, "Section", "ExpressionUUID" -> \
"d3228253-d59d-473d-8004-454053bdb89d"],
Cell[24029, 591, 5926, 132, 810, "Input", "ExpressionUUID" -> \
"1d179f61-d14c-41d2-82fd-ea06882e2d28"]
}, Open  ]],
Cell[CellGroupData[{
Cell[29992, 728, 191, 3, 64, "Section", "ExpressionUUID" -> \
"01868994-033b-4d4b-81a9-3f679ea8e246"],
Cell[30186, 733, 2279, 46, 390, "Input", "ExpressionUUID" -> \
"e753a734-7d4d-4079-920d-20260c5687d2"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[32514, 785, 158, 3, 63, "Subchapter", "ExpressionUUID" -> \
"abb079c2-2a50-48e2-a286-d47feab5a433"],
Cell[CellGroupData[{
Cell[32697, 792, 186, 3, 64, "Section", "ExpressionUUID" -> \
"6f8560f5-168e-4225-9261-7db3e94e2da8"],
Cell[32886, 797, 9230, 187, 1713, "Input", "ExpressionUUID" -> \
"491af0cb-d363-4260-b483-d0de22ec6764"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[42165, 990, 154, 3, 63, "Subchapter", "ExpressionUUID" -> \
"5e3e810d-beca-4ad7-b7a8-1b17a8087a6d"],
Cell[42322, 995, 153, 3, 30, "Text", "ExpressionUUID" -> \
"ff039151-abe3-459f-b7f4-12119f8505cc"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[42524, 1004, 191, 3, 65, "Chapter", "ExpressionUUID" -> \
"b6ba7688-defd-4a98-9571-2d52098c57ed"],
Cell[42718, 1009, 216, 4, 32, "Input", "ExpressionUUID" -> \
"5789a617-10ee-4d62-b431-8e26804ce017"]
}, Open  ]],
Cell[CellGroupData[{
Cell[42971, 1018, 154, 3, 65, "Chapter", "ExpressionUUID" -> \
"4988239d-a4ca-4948-81ff-894ebb721350"],
Cell[43128, 1023, 446, 11, 54, "Input", "ExpressionUUID" -> \
"37056d24-49b4-41b0-8a13-783fbf6f6095"]
}, Open  ]],
Cell[CellGroupData[{
Cell[43611, 1039, 223, 4, 65, "Chapter", "ExpressionUUID" -> \
"c259cad9-7e2b-465c-9cdf-9bf98107ba02"],
Cell[43837, 1045, 195, 3, 30, "Text", "ExpressionUUID" -> \
"1a261bb4-cfca-4dd9-ae32-2b4a1482669d"],
Cell[44035, 1050, 471, 13, 32, "Input", "ExpressionUUID" -> \
"50e68ccf-f809-4af6-8a6d-2921c3b9daf6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[44543, 1068, 218, 4, 65, "Chapter", "ExpressionUUID" -> \
"3dd30c34-0aa7-4ebc-b58f-fd5571b54947"],
Cell[44764, 1074, 882, 26, 75, "Input", "ExpressionUUID" -> \
"1f4db94a-8de2-4927-acf5-f20606f2703d"],
Cell[45649, 1102, 185, 3, 30, "Text", "ExpressionUUID" -> \
"167ed6f3-9f60-44c7-84ac-e1724f074b51"],
Cell[CellGroupData[{
Cell[45859, 1109, 445, 11, 32, "Input", "ExpressionUUID" -> \
"91a7dfd0-a173-40ab-a96c-eb961dc1fb94"],
Cell[46307, 1122, 237, 5, 32, "Output", "ExpressionUUID" -> \
"0286baf2-861f-430b-be4e-da2f4b5b5c6a"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[46593, 1133, 216, 4, 65, "Chapter", "ExpressionUUID" -> \
"e4146b6d-f32d-4887-bc3c-6891b0069c9a"],
Cell[46812, 1139, 1460, 30, 117, "Input", "ExpressionUUID" -> \
"1f6b0ad4-877d-408d-996d-36f35fd24f10"],
Cell[CellGroupData[{
Cell[48297, 1173, 220, 5, 63, "Subchapter", "ExpressionUUID" -> \
"535a8318-66e8-4728-92f8-b86a33907b2e"],
Cell[48520, 1180, 233, 4, 30, "Text", "ExpressionUUID" -> \
"07c25543-5f8a-481f-8d0d-8be94199aa2d"],
Cell[48756, 1186, 980, 28, 55, "Input", "ExpressionUUID" -> \
"3c881927-5cf0-4818-b0f8-182eff8d8fd5"],
Cell[49739, 1216, 332, 8, 32, "Input", "ExpressionUUID" -> \
"aff87ee4-1f1b-4445-89f2-32b03f61d641"]
}, Open  ]],
Cell[CellGroupData[{
Cell[50108, 1229, 158, 3, 63, "Subchapter", "ExpressionUUID" -> \
"d603433f-149a-4028-add5-dd3b9f599224"],
Cell[50269, 1234, 521, 13, 54, "Input", "ExpressionUUID" -> \
"f9e94010-af4e-4ea2-b6b0-40a088d3731b"],
Cell[50793, 1249, 179, 3, 32, "Input", "ExpressionUUID" -> \
"1dc1328c-8c71-48f5-8f30-d051aa32d2d0"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[51021, 1258, 171, 3, 65, "Chapter", "ExpressionUUID" -> \
"1f330b75-2005-4540-b9f6-179f226d624c"],
Cell[51195, 1263, 1072, 26, 75, "Input", "ExpressionUUID" -> \
"ca33a97b-3c9d-42ec-91aa-14efd04667ea"]
}, Open  ]],
Cell[CellGroupData[{
Cell[52304, 1294, 191, 3, 65, "Chapter", "ExpressionUUID" -> \
"eb54d128-3b89-48c6-b8d0-bb9444eb3c54"],
Cell[52498, 1299, 1446, 40, 75, "Input", "ExpressionUUID" -> \
"4913dac4-0a02-4295-a12a-a5c820039468"],
Cell[CellGroupData[{
Cell[53969, 1343, 183, 3, 63, "Subchapter", "ExpressionUUID" -> \
"3232cb4f-7d59-407b-a44b-56c85a986e95"],
Cell[54155, 1348, 606, 16, 75, "Input", "ExpressionUUID" -> \
"89d4df31-eaf4-406a-9235-85a59245e625"]
}, Open  ]]
}, Open  ]],
Cell[54788, 1368, 158, 3, 65, "Chapter", "ExpressionUUID" -> \
"d346218e-dbd8-4011-9694-4fa59f0c88f0"]
}, Open  ]]
}
]
*)

